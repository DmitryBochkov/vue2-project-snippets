'.source.js':
  
  'vuex.js-> import modules':
    'prefix': 'vuex-im',
    'body': """
    const files = require.context('.', false, /.js$/)
    const modules = {}

    files.keys().forEach(key => {
      if (key === './index.js') return
      modules[key.replace(/(./|.js)/g, '')] = files(key).default
    })

    export default modules
    """
    
  'vuex.js-> store index.js':
    'prefix': 'store',
    'body': """
    import Vue from 'vue'
    import Vuex from 'vuex'

    import modules from './modules'

    Vue.use(Vuex)

    const debug = process.env.NODE_ENV !== 'production'

    export default new Vuex.Store({
      modules,
      strict: debug
    })
    """
      
  'vuex.js-> vuex module':
    'prefix': 'module',
    'body': """
    export default {
      state: {
        // state
      },
      mutations: {
        // mutations
      },
      actions: {
        // actions
      }
    }
    """
    
  'vuex.js-> vuex module with auth':
    'prefix': 'module-auth',
    'body': """
    import * as authAPI from '@/api/auth'
    import * as userAPI from '@/api/user'

    const authUser = JSON.parse(localStorage.authUser || '{}')
    const authToken = localStorage.authToken || ''

    export default {
      state: {
        // state
        authUser: authUser || {},
        authToken: authToken || ''
      },
      mutations: {
        // mutations
        SET_TOKEN (state, authToken) {
          state.authToken = authToken
          localStorage.authToken = authToken
        },
        SET_USER (state, authUser) {
          state.authUser = authUser
          localStorage.authUser = JSON.stringify(authUser)
        }
      },
      actions: {
        // actions
        async login ({ commit, dispatch, state }, payload) {
          const { accessToken } = await authAPI.postLogin(payload)
          commit('SET_TOKEN', accessToken)
          
          const user = await userAPI.getCurrent()
          commit('SET_USER', user)
        },
        async getUser ({ commit, dispatch, state }) {
          const user = await userAPI.getCurrent()
          commit('SET_USER', user)
        },
        async register ({ commit, dispatch, state }, payload) {
          const { accessToken } = await authAPI.postRegister(payload)
          commit('SET_TOKEN', accessToken)
          
          const user = await userAPI.getCurrent()
          commit('SET_USER', user)
        },
        async logout ({ commit, dispatch, state }) {
          commit('SET_TOKEN', '')
          commit('SET_USER', {})
        }
      }
    }
    """
    
  'vuex.js-> vuex with dispatch':
    'prefix': 'dispatch',
    'body': """
    this.$store.dispatch('${1:functionName}',${2:payload})
    """
